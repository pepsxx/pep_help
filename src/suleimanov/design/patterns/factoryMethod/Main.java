package suleimanov.design.patterns.factoryMethod;

import java.util.Random;

public class Main {
    public static void main(String[] args) {
        System.out.println("""
                https://www.youtube.com/watch?v=TwIjjTC5g7g
                
                Шаблон: Фабрика (Factory Method)
                =======================================================================================================
                Цель:
                
                Создание интерфейса, который создаёт объект. При этом, выбор того, экземпляр какого класса создавать
                остаётся за классами, которые имплементируют данный интерфейс.
                =======================================================================================================
                
                Для чего используется:
                
                Для делегирования создания экземпляров, другому классу.
                
                =======================================================================================================
                Пример использования:
                
                - заранее неизвестно, экземпляры, какого класса нужно будет создавать;
                - класс спроектирован таким образом, что создаваемые им объекты имеют свойства определённого класса.
                
                =======================================================================================================
                """);

        AbstractFabric fabric = new Random().nextBoolean()
                ? new FabricDeveloperJava()
                : new FabricDeveloperCpp();

        AbstarctDeveloper developer = fabric.createDeveloper();
        developer.writeCode(); // дальше код не зависит от того какой именно developer
        developer.writeCode(); // дальше код не зависит от того какой именно developer
        developer.writeCode(); // дальше код не зависит от того какой именно developer

    }

}
